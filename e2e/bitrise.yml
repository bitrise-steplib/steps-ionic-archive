format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # Shared test configs
  - TEST_APP_URL: https://github.com/bitrise-io/ionic-conference-app.git
    # Bitrise Ionic steps don't support Capacitor yet, so we need to use the Cordova version of the app
    # This is branch is based on the last commit before the Capacitor migration:
  - TEST_APP_BRANCH: pre-capacitor
  # Shared test secrets
  - BITRISE_APPSTORECONNECT_API_KEY_URL: $BITRISE_APPSTORECONNECT_API_KEY_URL
  - BITFALL_APPSTORECONNECT_API_KEY_ID: $BITFALL_APPSTORECONNECT_API_KEY_ID
  - BITRISE_APPSTORECONNECT_API_KEY_ISSUER_ID: $BITRISE_APPSTORECONNECT_API_KEY_ISSUER_ID
  - BITRISE_APPLE_APPLE_CERTIFICATE_URL_LIST: $BITRISE_APPLE_APPLE_CERTIFICATE_URL_LIST
  - BITRISE_APPLE_APPLE_CERTIFICATE_PASSPHRASE_LIST: $BITRISE_APPLE_APPLE_CERTIFICATE_PASSPHRASE_LIST
  - BITRISE_APPLE_TEAM_ID: $BITRISE_APPLE_TEAM_ID
  - IONIC_USERNAME: $IONIC_USERNAME
  - IONIC_PASSWORD: $IONIC_PASSWORD

workflows:
  test_ios_device_build:
    before_run:
    - _check_xcode_available
    steps:
    - bitrise-run:
        run_if: |-
          {{ enveq "XCODE_AVAILABLE" "true" }}
        inputs:
        - workflow_id: utility_test_ios_device_build
        - bitrise_config_path: ./e2e/bitrise.yml

  utility_test_ios_device_build:
    envs:
    - TARGET: device
    - PLATFORM: ios
    before_run:
    - _setup
    - _install_dependencies_with_npm
    steps:
    - ionic-prepare:
        inputs:
        - workdir: $BITRISE_SOURCE_DIR/_tmp
        - platform: ios
        - ionic_version: latest
        - cordova_version: latest
    - manage-ios-code-signing@2:
        inputs:
        - distribution_method: development
        - project_path: $BITRISE_SOURCE_DIR/_tmp/platforms/ios/Ionic Conference App.xcworkspace
        - scheme: Ionic Conference App
        - certificate_url_list: $BITRISE_APPLE_APPLE_CERTIFICATE_URL_LIST
        - passphrase_list: $BITRISE_APPLE_APPLE_CERTIFICATE_PASSPHRASE_LIST
        - apple_team_id: $BITRISE_APPLE_TEAM_ID
        - api_key_path: $BITRISE_APPSTORECONNECT_API_KEY_URL
        - api_key_id: $BITFALL_APPSTORECONNECT_API_KEY_ID
        - api_issuer_id: $BITRISE_APPSTORECONNECT_API_KEY_ISSUER_ID
    - generate-cordova-build-configuration:
        inputs:
        - configuration: release
        - development_team: $BITRISE_DEVELOPER_TEAM
        - code_sign_identity: $BITRISE_DEVELOPMENT_CODESIGN_IDENTITY
        - provisioning_profile: $BITRISE_DEVELOPMENT_PROFILE
        - package_type: $BITRISE_EXPORT_METHOD
    after_run:
    - _run

  test_with_npm:
    before_run:
    - _check_xcode_available
    steps:
    - bitrise-run:
        run_if: |-
          {{ enveq "XCODE_AVAILABLE" "true" }}
        inputs:
        - workflow_id: utility_test_with_npm
        - bitrise_config_path: ./e2e/bitrise.yml

  utility_test_with_npm:
    envs:
    - TARGET: emulator
    - PLATFORM: ios,android
    before_run:
    - _setup
    - _install_dependencies_with_npm
    after_run:
    - _run

  test_with_yarn:
    before_run:
    - _check_xcode_available
    steps:
    - bitrise-run:
        run_if: |-
          {{ enveq "XCODE_AVAILABLE" "true" }}
        inputs:
        - workflow_id: utility_test_with_yarn
        - bitrise_config_path: ./e2e/bitrise.yml

  utility_test_with_yarn:
    envs:
    - TARGET: emulator
    - PLATFORM: ios,android
    before_run:
    - _setup
    - _install_dependencies_with_yarn
    after_run:
    - _run

  _run:
    steps:
    - path::./:
        title: Step Test
        inputs:
        - target: $TARGET
        - platform: $PLATFORM
        - ionic_version: latest
        - cordova_version: latest
        - ionic_username: $IONIC_USERNAME
        - ionic_password: $IONIC_PASSWORD
        - workdir: $BITRISE_SOURCE_DIR/_tmp

  _setup:
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            rm -rf $BITRISE_SOURCE_DIR/_tmp
            mkdir $BITRISE_SOURCE_DIR/_tmp
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone:
        inputs:
        - repository_url: $TEST_APP_URL
        - branch: $TEST_APP_BRANCH
        - clone_into_dir: $BITRISE_SOURCE_DIR/_tmp
    - nvm@1:
        inputs:
        - node_version: 18
    - set-java-version:
        run_if: "{{ .IsCI }}"
        inputs:
        - set_java_version: 8

  _install_dependencies_with_npm:
    steps:
    - npm:
        inputs:
        - workdir: $BITRISE_SOURCE_DIR/_tmp
        - command: ci

  _install_dependencies_with_yarn:
    steps:
    - yarn:
        inputs:
        - workdir: $BITRISE_SOURCE_DIR/_tmp
        - command: import
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            rm -rf _tmp/node_modules; rm _tmp/package-lock.json || true
    - yarn:
        inputs:
        - workdir: $BITRISE_SOURCE_DIR/_tmp
        - command: install

  _check_xcode_available:
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -eo pipefail
            if ! command -v xcodebuild &> /dev/null; then
                 echo "Xcode is not available."
                 envman add --key XCODE_AVAILABLE --value false
                 exit 0
            fi
            envman add --key XCODE_AVAILABLE --value true
